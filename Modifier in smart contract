pragma solidity ^0.8.6;
contract bank {
    mapping(address => uint ) balance;
    address owner;
    modifier onlyOwner {require(owner == msg.sender, "you are not the owner");
    _;

    }
    constructor() {
        owner = msg.sender;
    }
    function addBalance(uint _toAdd) public returns (uint)  {
        balance[msg.sender] += _toAdd;
    
    }
    function getBalance() public view returns (uint)   {
        return balance[msg.sender];
    }
    function transfer(address recipient,uint amount) public onlyOwner {
        require(balance[msg.sender] >= amount,"you do not have a balance to send");
        require(msg.sender != recipient, "you are sender and receiver both so its not possible");

        uint previousSenderBalance = balance[msg.sender];
        balance[msg.sender] -= amount;
        balance[recipient] += amount;
        assert(balance[msg.sender] == previousSenderBalance - amount);
    
    }
}
